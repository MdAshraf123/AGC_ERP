# Generated by Django 5.0.3 on 2025-06-28 12:25

import api.models
import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Day',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('day', models.CharField(max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dId', models.IntegerField(unique=True)),
                ('name', models.CharField(max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('role', models.CharField(choices=[('employee', 'Employee'), ('student', 'Student')], max_length=15)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Employees',
            fields=[
                ('emp_id', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=30)),
                ('role', models.CharField(max_length=20)),
                ('joindate', models.DateField()),
                ('experties', models.CharField(max_length=25)),
                ('city', models.CharField(max_length=30)),
                ('state', models.CharField(max_length=30)),
                ('address', models.CharField(max_length=50)),
                ('phone', models.CharField(max_length=15)),
                ('email', models.EmailField(max_length=254)),
                ('image', models.ImageField(default='null', upload_to=api.models.upload_profile)),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='employeess', to='api.department')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='employeess', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Sections',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('section', models.CharField(max_length=10)),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sections', to='api.department')),
            ],
        ),
        migrations.CreateModel(
            name='Group',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('group', models.CharField(max_length=5)),
                ('sections', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, related_name='groups', to='api.sections')),
            ],
        ),
        migrations.CreateModel(
            name='Semester',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sem', models.PositiveIntegerField()),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='semesters', to='api.department')),
            ],
        ),
        migrations.AddField(
            model_name='sections',
            name='semester',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sections', to='api.semester'),
        ),
        migrations.CreateModel(
            name='Students',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('u_roll', models.IntegerField(blank=True, null=True, unique=True)),
                ('c_roll', models.IntegerField(unique=True, validators=[django.core.validators.RegexValidator('[A-Za-z0-9]', 'Enter c_roll (only alphanumeric is alowed)')])),
                ('name', models.CharField(max_length=35)),
                ('batch', models.CharField(max_length=20)),
                ('course', models.CharField(max_length=15)),
                ('father_name', models.CharField(max_length=30)),
                ('mother_name', models.CharField(max_length=30)),
                ('dob', models.DateField()),
                ('address', models.CharField(max_length=70)),
                ('city', models.CharField(max_length=30)),
                ('state', models.CharField(max_length=30)),
                ('country', models.CharField(max_length=30)),
                ('email', models.EmailField(max_length=254, unique=True, validators=[django.core.validators.RegexValidator('^[a-zA-Z0-9._+-]+@gmail\\.com$', 'Enter gmail (@gmail.com)')])),
                ('phone', models.CharField(max_length=15, unique=True, validators=[django.core.validators.RegexValidator('^\\d{10}$', 'Enter only 10 digits number.')])),
                ('father_phone', models.CharField(max_length=15, validators=[django.core.validators.RegexValidator('^\\d{10}$', 'Enter only 10 digits number-')])),
                ('image', models.ImageField(default='null', upload_to=api.models.upload_profile)),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='students', to='api.department')),
                ('group', models.ForeignKey(default='1', on_delete=django.db.models.deletion.CASCADE, related_name='students', to='api.group')),
                ('sections', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='students', to='api.sections')),
                ('semester', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='students', to='api.semester')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='students', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Subjects',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sub_id', models.CharField(max_length=10, null=True, unique=True)),
                ('name', models.CharField(max_length=10)),
                ('type', models.CharField(max_length=10, null=True)),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subjects', to='api.department')),
                ('semester', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subjects', to='api.semester')),
            ],
        ),
        migrations.CreateModel(
            name='Attendence',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(auto_now_add=True)),
                ('is_present', models.CharField(max_length=2)),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attendences', to='api.department')),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attendences', to='api.group')),
                ('sections', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attendences', to='api.sections')),
                ('students', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attendences', to='api.students')),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attendences', to='api.subjects')),
            ],
        ),
        migrations.AddConstraint(
            model_name='semester',
            constraint=models.UniqueConstraint(fields=('department', 'sem'), name='unique_department_sem'),
        ),
        migrations.AddConstraint(
            model_name='sections',
            constraint=models.UniqueConstraint(fields=('department', 'semester', 'section'), name='unique_department_section'),
        ),
        migrations.AddConstraint(
            model_name='subjects',
            constraint=models.UniqueConstraint(fields=('department', 'semester', 'sub_id'), name='unique_dep_sem_sub_id'),
        ),
    ]
